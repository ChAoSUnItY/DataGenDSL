buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.32"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'

version = '1.0.0'
group = 'com.chaos.dgdsl'
archivesBaseName = 'DataGeneratorDSL'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                data_gen_dsl {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                data_gen_dsl {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'data_gen_dsl', "--all", "--output", "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""

            mods {
                data_gen_dsl {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    mavenCentral()
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.10'

    fg.deobf(implementation('thedarkcolour:kotlinforforge:1.11.0'))
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

sourceSets.main.resources {
    srcDirs 'src/generated/resources/'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "DataGeneratorDSL",
                "Specification-Vendor": "DataGeneratorDSL",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"DataGeneratorDSL",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}